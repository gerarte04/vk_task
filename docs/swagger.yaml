basePath: /api/v1
definitions:
  domain.Ad:
    properties:
      description:
        type: string
      image_address:
        type: string
      price:
        type: integer
      title:
        type: string
    type: object
  domain.FeedPageItem:
    properties:
      ad:
        $ref: '#/definitions/domain.Ad'
      item_number:
        type: integer
      self_authored:
        type: boolean
    type: object
  domain.User:
    properties:
      id:
        type: string
      login:
        type: string
    type: object
  types.GetFeedResponse:
    properties:
      feed:
        items:
          $ref: '#/definitions/domain.FeedPageItem'
        type: array
    type: object
  types.PostLoginRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  types.PostLoginResponse:
    properties:
      token:
        type: string
    type: object
  types.PostRegisterRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  title: Marketplace API
  version: "1.0"
paths:
  /ads/create:
    post:
      consumes:
      - application/json
      description: |-
        Для успешной аутентификации должен быть установлен хедер 'Authorization: Bearer %token%`.
        Для параметров объявления по умолчанию установлены следующие ограничения:
        - заголовок должен быть непустым и не длиннее 100 символов;
        - описание должно быть не длиннее 2000 символов;
        - цена должна быть положительной, но не более 10.000.000;
        - адрес картинки должен быть действительным, сама картинка должна быть формата jpeg, png или gif и иметь размер не более, чем 1024x1024.
      parameters:
      - description: Access token with Bearer prefix
        in: header
        name: Authorization
        required: true
        type: string
      - description: Ad details
        in: body
        name: ad
        required: true
        schema:
          $ref: '#/definitions/domain.Ad'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created
          schema:
            $ref: '#/definitions/domain.Ad'
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Object not found
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Create new ad
      tags:
      - ads
  /ads/feed:
    get:
      description: |-
        Для успешной аутентификации должен быть установлен хедер 'Authorization: Bearer %token%` (опционально).
        Размер страницы по умолчанию 5. Поле item_number обозначает порядковый номер объявления среди всех объявлений, подходящих под фильтры.
      parameters:
      - description: Access token with Bearer prefix (optional)
        in: header
        name: Authorization
        type: string
      - description: Page number
        in: query
        name: page_number
        type: integer
      - description: Lower price limit
        in: query
        name: lower_price
        type: integer
      - description: Higher price limit
        in: query
        name: higher_price
        type: integer
      - description: Order option ('creation_time' or 'price')
        in: query
        name: order_by
        type: string
      - description: Ascending or descending order
        in: query
        name: ascending
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Successfully got feed
          schema:
            $ref: '#/definitions/types.GetFeedResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Object not found
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Get feed with options
      tags:
      - ads
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login and password
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/types.PostLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully authorized
          schema:
            $ref: '#/definitions/types.PostLoginResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Object not found
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Login and get access token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: |-
        По умолчанию редусмотрены следующие ограничения на логин и пароль:
        - логин может состоять только из букв, цифр и символа '_', его длина должна быть в интервале от 3 до 30;
        - пароль должен содержать хотя бы символ из набора '!@#$%^&*?/', его длина должна быть в интервале от 8 до 30.
      parameters:
      - description: Login and password
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/types.PostRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully registered
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Object not found
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Register new user
      tags:
      - auth
swagger: "2.0"
